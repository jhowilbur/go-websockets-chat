<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"
          name="viewport">
    <meta content="ie=edge" http-equiv="X-UA-Compatible">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 100px;
            padding: 0.5em;
        }
    </style>

    <title>Document</title>

</head>
<body>
<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="mt-3">Chat App with WebSocket</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h3>Chat</h3>

            <div class="form-group">
                <label for="username">Username: </label>
                <input type="text" name="username" class="form-control" id="username" autocomplete="off">
            </div>

            <div class="form-group">
                <label for="message">Message: </label>
                <input type="text" name="message" class="form-control" id="message" autocomplete="off" >
            </div>

            <hr />
            <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>

            <input type="hidden" name="action" id="action">

            <div id="status" class="mt-2 float-end"></div>

            <br />
            <div id="output" class="chatbox"></div>

        </div>

        <div class="col-md-4">
            <h3>Users Online</h3>
            <ul id="online_users"> </ul>
        </div>
    </div>

</div>




<!--bootstrap 5-->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js"
        integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw=="
        crossorigin="anonymous"></script>

<script src="/html/static/reconnecting-websocket.min.js"></script>

<script>
    let socket = null;
    let o = document.getElementById('output');
    let userField = document.getElementById("username");
    let messageField = document.getElementById("message");

    document.addEventListener('DOMContentLoaded', function () {
        // socket = new WebSocket('ws://localhost:5000/ws');
        socket = new ReconnectingWebSocket('ws://localhost:5000/ws', null, {debug: true, reconnectInterval: 3000});

        socket.onerror = function (error) {
            console.log('WebSocket Error: ' + error);
        };

        socket.onopen = function () {
            console.log('Connected');
        };
        socket.onclose = function () {
            console.log('Disconnected');
        };

        socket.onmessage = function (event) {
            let data = JSON.parse(event.data);
            console.log("Action received from ws: " + data.action);

            switch (data.action) {
                case "users_list":
                    let ulUser = document.getElementById('online_users');
                    while (ulUser.firstChild) {
                        ulUser.removeChild(ulUser.firstChild);
                    }

                    if (data.connected_users.length > 0) {
                        data.connected_users.forEach(function (user) {
                            let li = document.createElement('li');
                            li.appendChild(document.createTextNode(user));
                            ulUser.appendChild(li);
                        });
                    }
                    break;

                case "message_received":
                    o.innerHTML += data.message;
                    break;

            }
        };

        let userInput = document.getElementById('username');
        userInput.addEventListener('change', function () {
            let jsonData = {};
            jsonData['action'] = 'set_username';
            jsonData['username'] = this.value;

            if (this.value === "") {
                jsonData['username'] = "Anonymous";
            }

            socket.send(JSON.stringify(jsonData));
            console.log("Username connected: " + this.value)
        });

        document.getElementById('message').addEventListener('keydown', function (event) {
            if (event.code === "Enter") {
                if (!socket) {
                    console.log("no connection");
                    return false
                }

                if ((userField.value === "") || (messageField.value === "")) {
                    errorMessage("Fill out username and message!");
                    return false;
                } else {
                    sendMessage()
                }

                event.preventDefault();
                event.stopPropagation();
            }
        });

        document.getElementById("sendBtn").addEventListener("click", function () {
            if ((userField.value === "") || (messageField.value === "")) {
                errorMessage("Fill out username and message!");
                return false;
            } else {
                sendMessage()
            }
        })
    });

    function sendMessage() {
        let jsonData = {};
        jsonData['action'] = 'send_message';
        jsonData['message'] = document.getElementById('message').value;
        jsonData['username'] = document.getElementById('username').value;

        socket.send(JSON.stringify(jsonData));
        console.log("Message sent: " + document.getElementById('message').value)
    }

    function errorMessage(msg) {
        notie.alert({
            type: 'error',
            text: msg,
        })
    }

</script>
</body>
</html>